[app:app]
use = egg:geoportailv3
project = geoportailv3
reload_templates = true
debug_authorization = false
debug_notfound = false
debug_routematch = false
debug_templates = true
mako.directories = geoportailv3:templates
    c2cgeoportal:templates
app.cfg = %(here)s/config.yaml
# Authentication settings
authtkt_cookie_name = auth_tkt_${instanceid}
authtkt_secret = ${authtkt_secret}
# Database information
sqlalchemy.url = postgresql://${dbuser}:${dbpassword}@${dbhost}:${dbport}/${db}
auth_replication_enabled = ${vars:enable_auth_replication}
sqlalchemy_replication.url = postgresql://${dbuser_replication}:${dbpassword_replication}@${dbhost_replication}:${dbport_replication}/${db_replication}
schema = ${vars:schema}
parentschema = ${vars:parent_schema}

# Admin interface
enable_admin_interface = ${vars:enable_admin_interface}

# 10 days of default cache
default_max_age = 864000

# pyramid_closure configuration
pyramid_closure.roots =
    ${closure_library_path}/closure/goog
pyramid_closure.roots_with_prefix =
    ../../../proj/js %(here)s/geoportailv3/static/js
    ../../../node_modules/openlayers %(here)s/node_modules/openlayers
    ../../../node_modules/ngeo %(here)s/node_modules/ngeo

# used for the "node_modules" and "closure" static views
node_modules_path = %(here)s/node_modules/
closure_library_path = ${closure_library_path}

[filter:fanstatic]
use = egg:fanstatic#fanstatic
publisher_signature = fanstatic
base_url = /${vars:instanceid}/wsgi
recompute_hashes = false
versioning = false
bottom = true
minified = true

[pipeline:main]
pipeline =
    egg:WebError#evalerror
    fanstatic
    app

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = ${vars:waitress_port}

# Begin logging configuration

[loggers]
keys = root, c2cgeoportal, geoportailv3

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_c2cgeoportal]
level = DEBUG
handlers =
qualname = c2cgeoportal

[logger_geoportailv3]
level = DEBUG
handlers =
qualname = geoportailv3

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
